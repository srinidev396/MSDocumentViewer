trigger:
  branches:
    include:     
      - master

pool:
  name: Default

stages:
- stage: Build
  displayName: 'Deploy from Published Artifact'
  jobs:
  - job: CI
    displayName: 'Continuous Integration'
    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET Core SDK'
      inputs:
        packageType: 'sdk'
        version: '8.x'  

    - script: dotnet restore ./net/DocumentService.csproj
      displayName: 'Restore dependencies'

    - script: dotnet build ./net/DocumentService.csproj --configuration Release
      displayName: 'Build application'

    - script: dotnet publish ./net/DocumentService.csproj --configuration Release --output $(Build.ArtifactStagingDirectory)
      displayName: 'Publish Application'
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: Container

- stage: DeployQA
  displayName: 'Deploy to QA'
  dependsOn: Build
  jobs:
  - job: CDQA
    displayName: 'Continuous Deployment to QA'
    steps:
    - download: current
      artifact: drop
      displayName: 'Download Build Artifacts'

    - task: UseDotNet@2
      displayName: 'Install .NET Core SDK'
      inputs:
        packageType: 'sdk'
        version: '8.x'  
    
    # - task: PowerShell@2
    #   displayName: 'Update appsettings.json for QA'
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       $jsonPath = "$(Pipeline.Workspace)/drop/appsettings.json"
    #       $jsonContent = Get-Content $jsonPath -Raw
    #       Write-Host "Raw JSON content: $jsonContent"
    #       $jsonContent = $jsonContent -replace '//.*', ''
    #       $jsonContent = $jsonContent -replace '/\*[\s\S]*?\*/', ''

    #       Write-Host "Cleaned JSON content: $jsonContent"
          
    #       $json = $jsonContent | ConvertFrom-Json
    #       Write-Host "JSON object: $($json | ConvertTo-Json -Depth 32)"

    #       if ($json.NLog -and $json.NLog.targets -and $json.NLog.targets.fileTarget) {
    #           $json.NLog.targets.fileTarget.fileName = "Storage connection string"
    #       } else {
    #           Write-Host "Error: Path to fileName property is incorrect."
    #       }
    #       $json | ConvertTo-Json -Depth 32 | Set-Content $jsonPath

        

    - task: AzureRmWebAppDeployment@4
      displayName: 'Azure Web App Deploy to QA'
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Microservices_Connection'
        appType: 'webApp'
        WebAppName: 'webapp-msqa-cc-documentviewer'
        package: '$(Pipeline.Workspace)/drop'

  #  - script: cd /d F:\DevOps\QA_Test_Automation && mvn clean test -Dgroups=Smoke,setUp -Dprod=api -Denv=devopsqa -Dtest=api.Api_TestCases.**
  #    displayName: "Run API Smoke test on QA-WebApp"
